#include <qtlinguistics.h>

unsigned char RawHiragana [ 232 ] =                                            {
0xE3,0x81,0x82,0xE3,0x81,0x84,0xE3,0x81,0x86,0xE3,0x81,0x88,0xE3,0x81,0x8A,0xE3,
0x81,0x8B,0xE3,0x81,0x8D,0xE3,0x81,0x8F,0xE3,0x81,0x91,0xE3,0x81,0x93,0xE3,0x81,
0x95,0xE3,0x81,0x97,0xE3,0x81,0x99,0xE3,0x81,0x9B,0xE3,0x81,0x9D,0xE3,0x81,0x9F,
0xE3,0x81,0xA1,0xE3,0x81,0xA4,0xE3,0x81,0xA6,0xE3,0x81,0xA8,0xE3,0x81,0xAA,0xE3,
0x81,0xAB,0xE3,0x81,0xAC,0xE3,0x81,0xAD,0xE3,0x81,0xAE,0xE3,0x81,0xAF,0xE3,0x81,
0xB2,0xE3,0x81,0xB5,0xE3,0x81,0xB8,0xE3,0x81,0xBB,0xE3,0x81,0xBE,0xE3,0x81,0xBF,
0xE3,0x82,0x80,0xE3,0x82,0x81,0xE3,0x82,0x82,0xE3,0x82,0x84,0xE3,0x82,0x86,0xE3,
0x82,0x88,0xE3,0x82,0x89,0xE3,0x82,0x8A,0xE3,0x82,0x8B,0xE3,0x82,0x8C,0xE3,0x82,
0x8D,0xE3,0x82,0x8F,0xE3,0x82,0x93,0xE3,0x82,0x92,0xE3,0x82,0x90,0xE3,0x82,0x91,
0xE3,0x81,0x8C,0xE3,0x81,0x8E,0xE3,0x81,0x90,0xE3,0x81,0x92,0xE3,0x81,0x94,0xE3,
0x81,0x96,0xE3,0x81,0x98,0xE3,0x81,0x9A,0xE3,0x81,0x9C,0xE3,0x81,0x9E,0xE3,0x81,
0xA0,0xE3,0x81,0xA2,0xE3,0x81,0xA5,0xE3,0x81,0xA7,0xE3,0x81,0xA9,0xE3,0x81,0xB0,
0xE3,0x81,0xB3,0xE3,0x81,0xB6,0xE3,0x81,0xB9,0xE3,0x81,0xBC,0xE3,0x82,0x94,0xE3,
0x81,0xB1,0xE3,0x81,0xB4,0xE3,0x81,0xB7,0xE3,0x81,0xBA,0xE3,0x81,0xBD,0xE3,0x80,
0x85,0xE3,0x82,0x9D,0xE3,0x82,0x9E,0x00
}                                                                              ;

unsigned char RawKatakana [ 232 ] =                                            {
0xE3,0x82,0xA2,0xE3,0x82,0xA4,0xE3,0x82,0xA6,0xE3,0x82,0xA8,0xE3,0x82,0xAA,0xE3,
0x82,0xAB,0xE3,0x82,0xAD,0xE3,0x82,0xAF,0xE3,0x82,0xB1,0xE3,0x82,0xB3,0xE3,0x82,
0xB5,0xE3,0x82,0xB7,0xE3,0x82,0xB9,0xE3,0x82,0xBB,0xE3,0x82,0xBD,0xE3,0x82,0xBF,
0xE3,0x83,0x81,0xE3,0x83,0x84,0xE3,0x83,0x86,0xE3,0x83,0x88,0xE3,0x83,0x8A,0xE3,
0x83,0x8B,0xE3,0x83,0x8C,0xE3,0x83,0x8D,0xE3,0x83,0x8E,0xE3,0x83,0x8F,0xE3,0x83,
0x92,0xE3,0x83,0x95,0xE3,0x83,0x98,0xE3,0x83,0x9B,0xE3,0x83,0x9E,0xE3,0x83,0x9F,
0xE3,0x83,0xA0,0xE3,0x83,0xA1,0xE3,0x83,0xA2,0xE3,0x83,0xA4,0xE3,0x83,0xA6,0xE3,
0x83,0xA8,0xE3,0x83,0xA9,0xE3,0x83,0xAA,0xE3,0x83,0xAB,0xE3,0x83,0xAC,0xE3,0x83,
0xAD,0xE3,0x83,0xAF,0xE3,0x83,0xB3,0xE3,0x83,0xB2,0xE3,0x83,0xB0,0xE3,0x83,0xB1,
0xE3,0x82,0xAC,0xE3,0x82,0xAE,0xE3,0x82,0xB0,0xE3,0x82,0xB2,0xE3,0x82,0xB4,0xE3,
0x82,0xB6,0xE3,0x82,0xB8,0xE3,0x82,0xBA,0xE3,0x82,0xBC,0xE3,0x82,0xBE,0xE3,0x83,
0x80,0xE3,0x83,0x82,0xE3,0x83,0x85,0xE3,0x83,0x87,0xE3,0x83,0x89,0xE3,0x83,0x90,
0xE3,0x83,0x93,0xE3,0x83,0x96,0xE3,0x83,0x99,0xE3,0x83,0x9C,0xE3,0x83,0xB4,0xE3,
0x83,0x91,0xE3,0x83,0x94,0xE3,0x83,0x97,0xE3,0x83,0x9A,0xE3,0x83,0x9D,0xE3,0x83,
0xBC,0xE3,0x83,0xBD,0xE3,0x83,0xBE,0x00
}                                                                              ;

const char * JapaneseSpellings [77] =         {
  "a"   , "i"   , "u"   , "e"   , "o"   ,  //  5
  "ka"  , "ki"  , "ku"  , "ke"  , "ko"  ,  // 10
  "sa"  , "shi" , "su"  , "se"  , "so"  ,  // 15
  "ta"  , "chi" , "tsu" , "te"  , "to"  ,  // 20
  "na"  , "ni"  , "nu"  , "ne"  , "no"  ,  // 25
  "ha"  , "hi"  , "fu"  , "he"  , "ho"  ,  // 30
  "ma"  , "mi"  , "mu"  , "me"  , "mo"  ,  // 35
  "ya"  ,         "yu"  ,         "yo"  ,  // 38
  "ra"  , "ri"  , "ru"  , "re"  , "ro"  ,  // 43
  "wa"  ,         "n"   ,         "o"   ,  // 46
          "i"   ,         "e"           ,  // 48
  "ga"  , "gi"  , "gu"  , "ge"  , "go"  ,  // 53
  "za"  , "ji"  , "zu"  , "ze"  , "zo"  ,  // 58
  "da"  , "ji"  , "zu"  , "de"  , "do"  ,  // 63
  "ba"  , "bi"  , "bu"  , "be"  , "bo"  ,  // 68
  "vu"                                  ,  // 69
  "pa"  , "pi"  , "pu"  , "pe"  , "po"  ,  // 74
  ""    , ""    , ""                       // 75(74) , 76(75) , 77(76)
}                                       ;

QString N::Acoustics::Hiragana(void)
{
  QByteArray  H((const char *)RawHiragana,232) ;
  return QString::fromUtf8(H)                  ;
}

QString N::Acoustics::Katakana(void)
{
  QByteArray  K((const char *)RawKatakana,232) ;
  return QString::fromUtf8(K)                  ;
}

QStringList N::Acoustics::JapanesePhonemes(void)
{
  QStringList S                        ;
  for (int i=0;i<77;i++)               {
    S << QString(JapaneseSpellings[i]) ;
  }                                    ;
  return S                             ;
}

KMAPs N::Acoustics::JpAlphabetToPhoneme (void)
{
  KMAPs   K                      ;
  QString h = Hiragana()         ;
  QString k = Katakana()         ;
  QString s                      ;
  for (int i=0;i<h.length();i++) {
    s = h.at(i)                  ;
    K[s] = JapaneseSpellings[i]  ;
    s = k.at(i)                  ;
    K[s] = JapaneseSpellings[i]  ;
  }                              ;
  return K                       ;
}

KMAPs N::Acoustics::JpAlphabetSwap (void)
{
  KMAPs   K ;
  QString h = Hiragana()         ;
  QString k = Katakana()         ;
  QString s                      ;
  QString t                      ;
  for (int i=0;i<h.length();i++) {
    s = h.at(i)                  ;
    t = k.at(i)                  ;
    K[s] = t                     ;
    K[t] = s                     ;
  }                              ;
  return K                       ;
}
